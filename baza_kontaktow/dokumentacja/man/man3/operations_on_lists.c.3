.TH "C:/Users/Wojtek/Documents/C/PP2/projektpp2/baza_kontaktow/operations_on_lists.c" 3 "Pn, 30 maj 2016" "Version 1.0" "Baza_Kontaktów" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Wojtek/Documents/C/PP2/projektpp2/baza_kontaktow/operations_on_lists.c \- Przechowuje definicje funkcji do obsługi list oraz funkcji ogólnego uzytku\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'baza_kontaktow\&.h'\fP
.br

.SS "Funkcje"

.in +1c
.ti -1c
.RI "void \fBprint_list\fP (struct \fBUser_Node\fP *FrontUserList, struct \fBtelephone_nr\fP *FrontTelList, struct \fBemail_node\fP *FrontEmailList)"
.br
.RI "\fIProcedura wyświetla wszystkich używtowników\&. \fP"
.ti -1c
.RI "void \fBprint_person_by_id\fP (struct \fBUser_Node\fP *FrontUserList, struct \fBtelephone_nr\fP *FrontTelList, struct \fBemail_node\fP *FrontEmailList, int data)"
.br
.RI "\fIProcedura wyświetla danego użytkownika pod ID\&. \fP"
.ti -1c
.RI "void \fBprint_person_by_name_or_surname\fP (struct \fBUser_Node\fP *FrontUserList, struct \fBtelephone_nr\fP *FrontTelList, struct \fBemail_node\fP *FrontEmailList, char data[], unsigned short int what)"
.br
.RI "\fIProcedura wyświetla szukanego użytkownika po imieniu lub nazwisku\&. \fP"
.ti -1c
.RI "void \fBedit_person\fP (struct \fBUser_Node\fP *FrontUserList, struct \fBtelephone_nr\fP *FrontTelList, struct \fBemail_node\fP *FrontEmailList, unsigned short int data)"
.br
.RI "\fIProcedura służy do edycji użytkownika\&. \fP"
.ti -1c
.RI "void \fBChangeToupper\fP (char array[])"
.br
.RI "\fIProcedura do zamiany małych liter na duże\&. \fP"
.ti -1c
.RI "int \fBcheck_postal_code\fP (char array[])"
.br
.RI "\fIFunkcja do sprawdzania poprawnosci wprowadzonego kodu pocztowego\&. \fP"
.ti -1c
.RI "int \fBcheck_string\fP (char array[])"
.br
.RI "\fIFunkcja do sprawdzania poprawnosci wprowadzonego ciagu znaków\&. \fP"
.ti -1c
.RI "int \fBcheck_email\fP (char array[])"
.br
.RI "\fIFunkcja do sprawdzania poprawnosci wprowadzonego ciagu znaków\&. \fP"
.ti -1c
.RI "int \fBuser_exist\fP (struct \fBUser_Node\fP *FrontUserList, int data)"
.br
.RI "\fIFunkcja sprawdza czy użytkownik o podanym ID instnieje\&. \fP"
.ti -1c
.RI "int \fBtel_exist\fP (struct \fBtelephone_nr\fP *FrontTelList, int data)"
.br
.RI "\fIFunkcja sprawdza czy podany telefon znajduje się na liście\&. \fP"
.ti -1c
.RI "int \fBemail_exist\fP (struct \fBemail_node\fP *FrontEmailList, char data[])"
.br
.RI "\fIFunkcja sprawdza czy podany email znajduje się na liście\&. \fP"
.ti -1c
.RI "int \fBname_exist\fP (struct \fBUser_Node\fP *FrontUserList, char data[])"
.br
.RI "\fIFunkcja sprawdza czy podane imię znajduje się na liście\&. \fP"
.ti -1c
.RI "int \fBsurname_exist\fP (struct \fBUser_Node\fP *FrontUserList, char data[])"
.br
.RI "\fIFunkcja sprawdza czy podane nazwisko znajduje się na liście\&. \fP"
.in -1c
.SH "Opis szczegółowy"
.PP 
Przechowuje definicje funkcji do obsługi list oraz funkcji ogólnego uzytku\&. 


.SH "Dokumentacja funkcji"
.PP 
.SS "void ChangeToupper (char array[])"

.PP
Procedura do zamiany małych liter na duże\&. 
.PP
\fBParametry:\fP
.RS 4
\fIarray\fP paramert przechowuje ciąg co edycji 
.RE
.PP

.SS "int check_email (char array[])"

.PP
Funkcja do sprawdzania poprawnosci wprowadzonego ciagu znaków\&. 
.PP
\fBParametry:\fP
.RS 4
\fIarray\fP paramert przechowuje ciąg znaków 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy ciąg jest poprawny 
.PP
0 w przypadku gdy ciąg jest niepoprawny 
.RE
.PP

.SS "int check_postal_code (char array[])"

.PP
Funkcja do sprawdzania poprawnosci wprowadzonego kodu pocztowego\&. 
.PP
\fBParametry:\fP
.RS 4
\fIarray\fP paramert przechowuje kod pocztowy 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy kod pocztowy jest poprawny 
.PP
0 w przypadku gdy kod pocztowy jest niepoprawny 
.RE
.PP

.SS "int check_string (char array[])"

.PP
Funkcja do sprawdzania poprawnosci wprowadzonego ciagu znaków\&. 
.PP
\fBParametry:\fP
.RS 4
\fIarray\fP paramert przechowuje ciąg znaków 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy ciąg jest poprawny 
.PP
0 w przypadku gdy ciąg jest niepoprawny 
.RE
.PP

.SS "void edit_person (struct \fBUser_Node\fP * FrontUserList, struct \fBtelephone_nr\fP * FrontTelList, struct \fBemail_node\fP * FrontEmailList, unsigned short int data)"

.PP
Procedura służy do edycji użytkownika\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontUserList\fP wskaźnik na początek listy\&. 
.br
\fIFrontTelList\fP wskaźnik na początek listy\&. 
.br
\fIFrontEmailList\fP wskaźnik na początek listy\&. 
.br
\fIdata\fP paramert przechowuje ID edytowanego użytkownika 
.RE
.PP

.SS "int email_exist (struct \fBemail_node\fP * FrontEmailList, char data[])"

.PP
Funkcja sprawdza czy podany email znajduje się na liście\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontEmailList\fP wskaźnik na pierwszy element listy 
.br
\fIdata\fP przechowuje email podany przez użytkownika 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy email znajduję się liście 
.PP
0 w przypadku gdy email nie znajduję się liście 
.RE
.PP

.SS "int name_exist (struct \fBUser_Node\fP * FrontUserList, char data[])"

.PP
Funkcja sprawdza czy podane imię znajduje się na liście\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontUserList\fP wskaźnik na pierwszy element listy 
.br
\fIdata\fP przechowuje imię podane przez użytkownika 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy imię znajduję się liście 
.PP
0 w przypadku gdy imię nie znajduję się liście 
.RE
.PP

.SS "void print_list (struct \fBUser_Node\fP * FrontUserList, struct \fBtelephone_nr\fP * FrontTelList, struct \fBemail_node\fP * FrontEmailList)"

.PP
Procedura wyświetla wszystkich używtowników\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontUserList\fP wskaźnik na początek listy\&. 
.br
\fIFrontTelList\fP wskaźnik na początek listy\&. 
.br
\fIFrontEmailList\fP wskaźnik na początek listy\&. 
.RE
.PP

.SS "void print_person_by_id (struct \fBUser_Node\fP * FrontUserList, struct \fBtelephone_nr\fP * FrontTelList, struct \fBemail_node\fP * FrontEmailList, int data)"

.PP
Procedura wyświetla danego użytkownika pod ID\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontUserList\fP wskaźnik na początek listy\&. 
.br
\fIFrontTelList\fP wskaźnik na początek listy\&. 
.br
\fIFrontEmailList\fP wskaźnik na początek listy\&. 
.br
\fIdata\fP numer ID użytkownika do wyświetlenia 
.RE
.PP

.SS "void print_person_by_name_or_surname (struct \fBUser_Node\fP * FrontUserList, struct \fBtelephone_nr\fP * FrontTelList, struct \fBemail_node\fP * FrontEmailList, char data[], unsigned short int what)"

.PP
Procedura wyświetla szukanego użytkownika po imieniu lub nazwisku\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontUserList\fP wskaźnik na początek listy\&. 
.br
\fIFrontTelList\fP wskaźnik na początek listy\&. 
.br
\fIFrontEmailList\fP wskaźnik na początek listy\&. 
.br
\fIdata\fP paramert przechowuje imie lub nazwisko\&. 
.br
\fIwtah\fP parametr przechowuje decyzje użytkownica po jakim polu chce wyszukać osobę wartość 1 po imieniu 2 po nazwisku 
.RE
.PP

.SS "int surname_exist (struct \fBUser_Node\fP * FrontUserList, char data[])"

.PP
Funkcja sprawdza czy podane nazwisko znajduje się na liście\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontUserList\fP wskaźnik na pierwszy element listy 
.br
\fIdata\fP przechowuje nazwisko podane przez użytkownika 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy nazwisko znajduję się liście 
.PP
0 w przypadku gdy nazwisko nie znajduję się liście 
.RE
.PP

.SS "int tel_exist (struct \fBtelephone_nr\fP * FrontTelList, int data)"

.PP
Funkcja sprawdza czy podany telefon znajduje się na liście\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontTelList\fP wskaźnik na pierwszy element listy 
.br
\fIdata\fP przechowuje numer telefonu podany przez użytkownika 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy numer telefonu znajduję się liście 
.PP
0 w przypadku gdy numer telefonu nie znajduję się liście 
.RE
.PP

.SS "int user_exist (struct \fBUser_Node\fP * FrontUserList, int data)"

.PP
Funkcja sprawdza czy użytkownik o podanym ID instnieje\&. 
.PP
\fBParametry:\fP
.RS 4
\fIFrontUserList\fP wskaźnik na pierwszy element listy\&. 
.br
\fIdata\fP przechowuje ID podane przed użytkownika 
.RE
.PP
\fBZwraca:\fP
.RS 4
1 w przypadku gdy użytkownik o podanym ID znajduję się na liście 
.PP
0 w przypadku gdy użytkownik o podanym ID nie znajduję się na liście 
.RE
.PP

.SH "Autor"
.PP 
Wygenerowano automatycznie z kodu źródłowego programem Doxygen dla Baza_Kontaktów\&.
